"S-H","L-sleeveFlx","L-sleeveDwn","L-armSpan","H-sttre","H-chest","H-upRib",
"C-thigh","S-thighD","L-armFllThmb","H-Knee3","L-noseTop","H-buttUp","C-trsoV",
"L-backV","W-waist","C-waist","D-waist","L-trsoV","H-waist","Wght","C-wrst","H-wrst")
#label <- rename(colnames(datos),"Meas-")
colnames(datos) <- label
###### Separate by gender
datosFem <- datos[which(gender=="Female"),]
datosMal <- datos[-which(gender=="Female"),]
###### Save RData
save(datos,file='./RData/all93measures.RData')
save(datosFem,file='./RData/all93measures-Fem.RData')
save(datosMal,file='./RData/all93measures-Mal.RData')
# Substitute long-technical-names with codenames
rename <- function(original.names,short.labels){
codeName <- paste(short.labels,1:length(original.names), sep="")}
#Build correlation matrix
myCorr <- function(scores){round(cor(scores, use="complete.obs"),3)}
#Inform mean correlation (ignoring the diagonal)
meanCorr <- function(corrMatrix){round(mean(corrMatrix[corrMatrix!=1]),3)}
#Run a PCA
myPCA <- function(scores){prcomp(na.omit(scores), center=TRUE, scale = TRUE)}
scree <- function(pcaRes,studyName="Scree Plot"){
fviz_eig(pcaRes, main=paste(studyName))+theme_classic(base_size = 11)}
biplot <- function(pcaRes,dimX=1,dimY=2){
fviz_pca_var(pcaRes, axes = c(dim_x, dim_y), repel = T)+
theme_classic(base_size = 11)}
#Scaling variables
myScale <- function(x){(x-mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)}
#Hierarchical clustering plots
plotHC <- function(scaledScores,studyNo=""){
plot(hclust(dist(t(scaledScores))),axes=F,ylab="",xlab="",
cex=0.3,
main=paste("Cluster dendogram - ",studyNo))}
corrplot(myCorr(datos), method="color", order="hclust", col.lim = c(-0.15,1),tl.cex = 0.4)
meanCorr(myCorr(datos))
scaleDatos <- apply(datos,2,myScale)
plotHC(scaleDatos, "Full sample")
PCA <- myPCA(datos)
summary(PCA)
scree(PCA)
PCA <- myPCA(datos)
sumPCA <- summary(PCA)
sumPCA
sumPCA$importance
sumPCA$importance[2,]
scree(PCA)
text(4,10,"Hello")
sumPCA[2,]
sumPCA$importance[2,]
scree(PCA)
noFactors <- 10
propVariance <- sumPCA$importance[2,1:noFactors]
ratios <-NULL
for(i in 1:noFactors-1){
ratios[i] <- propVariance[i]/propVariance[i+1]
}
ratios
scree(PCA)
noFactors <- 10
propVariance <- sumPCA$importance[2,1:noFactors]
ratios <- matrix(NA, ncol=2, nrow=noFactors-1)
for(i in 1:noFactors-1){
ratios[i,1] <- paste(i,"/",i+1)
ratios[i,2] <- propVariance[i]/propVariance[i+1]
}
ratios
scree(PCA)
noFactors <- 10
propVariance <- sumPCA$importance[2,1:noFactors]
ratios <- matrix(NA, ncol=2, nrow=noFactors-1)
for(i in 1:noFactors-1){
ratios[i,1] <- paste(i,"/",i+1, sep="")
ratios[i,2] <- propVariance[i]/propVariance[i+1]
}
ratios
scree(PCA)
noFactors <- 10
propVariance <- sumPCA$importance[2,1:noFactors]
ratios <- matrix(NA, ncol=2, nrow=noFactors-1)
for(i in 1:noFactors-1){
ratios[i,1] <- paste(i,"/",i+1, sep="")
ratios[i,2] <- propVariance[i]/propVariance[i+1]
}
colnames(ratios) <- c("Dimensions", "Ratio of Variance explained")
ratios
# Substitute long-technical-names with codenames
rename <- function(original.names,short.labels){
codeName <- paste(short.labels,1:length(original.names), sep="")}
#Build correlation matrix
myCorr <- function(scores){round(cor(scores, use="complete.obs"),3)}
#Inform mean correlation (ignoring the diagonal)
meanCorr <- function(corrMatrix){round(mean(corrMatrix[corrMatrix!=1]),3)}
#Run a PCA
myPCA <- function(scores){prcomp(na.omit(scores), center=TRUE, scale = TRUE)}
ratioVar <- function(pcaRes, noFactors=10){
sumPCA <- summary(pcaRes)
propVariance <- sumPCA$importance[2,1:noFactors]
ratios <- matrix(NA, ncol=2, nrow=noFactors-1)
for(i in 1:noFactors-1){
ratios[i,1] <- paste(i,"/",i+1, sep="")
ratios[i,2] <- round(propVariance[i]/propVariance[i+1],3)}
colnames(ratios) <- c("Dimensions", "Ratio")
return(ratios)}
scree <- function(pcaRes,studyName="Scree Plot"){
fviz_eig(pcaRes, main=paste(studyName))+theme_classic(base_size = 11)}
biplot <- function(pcaRes,dimX=1,dimY=2){
fviz_pca_var(pcaRes, axes = c(dim_x, dim_y), repel = T)+
theme_classic(base_size = 11)}
#Scaling variables
myScale <- function(x){(x-mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)}
#Hierarchical clustering plots
plotHC <- function(scaledScores,studyNo=""){
plot(hclust(dist(t(scaledScores))),axes=F,ylab="",xlab="",
cex=0.3,
main=paste("Cluster dendogram - ",studyNo))}
ratioVar(PCA)
biplot(PCA,1,2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(corrplot)
library(factoextra)
library(foreign)
options(ggrepel.max.overlaps = Inf)
###### Load data
link.SAV <- "../../datasets/moreyAntropo/data/ansur2.sav"
datos <- read.spss(link.SAV, to.data.frame = TRUE)
gender <- datos$Gender
###### Keep relevant columns
keep.columns <- c(2:94)
datos <- datos[,keep.columns]
###### Relabel the columns
label <- c("D-abs","H-shldr","L1-upArm","C-ankle","H-axlla","C-foot","L1-foot","W1-bckTop",
"C-upArm","W-abs","W-bckMid","W-ankle","C1-chin","C2-chin","W1-head","C-butt",
"D-butt","H-bttck","S-BttKn","S-bttPpltl","C-calf","H-crvcl","W-chest","C-chest",
"D-chest","H-chest","H-crtch","C1-crtch","C2-crtch","W-ear","L-ear","D-ear",
"S-elbwBtt","S-eyeSght","W-foot","L2-foot","L1-LwArm","C-LwArm","L-elbwElbw",
"L2-lwArm","S-leg","W-hand","C-hand","L-hand","W2-head","C-head","L-head","C-heel",
"W-heel","W-hip","S-hipW","H-illio","L-btwEyes","W2-bckTop","W3-bckTop","H-knee",
"S-kneeH","H-knee2","H-heel","C-thighL","L-noseMntn","C1-neck","C2-neck",
"S-rchFngrUp","L-hndPalm","S-pplitlH","L3-lwArm","C-shldr","L2-upArm","L-shldr",
"S-H","L-sleeveFlx","L-sleeveDwn","L-armSpan","H-sttre","H-chest","H-upRib",
"C-thigh","S-thighD","L-armFllThmb","H-Knee3","L-noseTop","H-buttUp","C-trsoV",
"L-backV","W-waist","C-waist","D-waist","L-trsoV","H-waist","Wght","C-wrst","H-wrst")
#label <- rename(colnames(datos),"Meas-")
colnames(datos) <- label
###### Separate by gender
datosFem <- datos[which(gender=="Female"),]
datosMal <- datos[-which(gender=="Female"),]
###### Save RData
save(datos,file='./RData/all93measures.RData')
save(datosFem,file='./RData/all93measures-Fem.RData')
save(datosMal,file='./RData/all93measures-Mal.RData')
# Substitute long-technical-names with codenames
rename <- function(original.names,short.labels){
codeName <- paste(short.labels,1:length(original.names), sep="")}
#Build correlation matrix
myCorr <- function(scores){round(cor(scores, use="complete.obs"),3)}
#Inform mean correlation (ignoring the diagonal)
meanCorr <- function(corrMatrix){round(mean(corrMatrix[corrMatrix!=1]),3)}
#Run a PCA
myPCA <- function(scores){prcomp(na.omit(scores), center=TRUE, scale = TRUE)}
ratioVar <- function(pcaRes, noFactors=10){
sumPCA <- summary(pcaRes)
propVariance <- sumPCA$importance[2,1:noFactors]
ratios <- matrix(NA, ncol=2, nrow=noFactors-1)
for(i in 1:noFactors-1){
ratios[i,1] <- paste(i,"/",i+1, sep="")
ratios[i,2] <- round(propVariance[i]/propVariance[i+1],3)}
ratios <- as.data.frame(ratios)
colnames(ratios) <- c("Dimensions", "ratio_PropVar")
return(ratios)}
scree <- function(pcaRes,studyName="Scree Plot"){
fviz_eig(pcaRes, main=paste(studyName))+theme_classic(base_size = 11)}
biplot <- function(pcaRes,dim_x=1,dim_y=2){
fviz_pca_var(pcaRes, axes = c(dim_x, dim_y), repel = T)+
theme_classic(base_size = 11)}
#Scaling variables
myScale <- function(x){(x-mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)}
#Hierarchical clustering plots
plotHC <- function(scaledScores,studyNo=""){
plot(hclust(dist(t(scaledScores))),axes=F,ylab="",xlab="",
cex=0.3,
main=paste("Cluster dendogram - ",studyNo))}
corrplot(myCorr(datos), method="color", order="hclust", col.lim = c(-0.15,1),tl.cex = 0.4)
meanCorr(myCorr(datos))
scaleDatos <- apply(datos,2,myScale)
plotHC(scaleDatos, "Full sample")
PCA <- myPCA(datos)
sumPCA <- summary(PCA)
sumPCA
scree(PCA)
ratioVar(PCA)
biplot(PCA,1,2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(corrplot)
library(factoextra)
library(foreign)
options(ggrepel.max.overlaps = Inf)
###### Load data
link.SAV <- "../../datasets/moreyAntropo/data/ansur2.sav"
datos <- read.spss(link.SAV, to.data.frame = TRUE)
gender <- datos$Gender
###### Keep relevant columns
keep.columns <- c(2:94)
datos <- datos[,keep.columns]
###### Relabel the columns
label <- c("D-abs","H-shldr","L1-upArm","C-ankle","H-axlla","C-foot","L1-foot","W1-bckTop",
"C-upArm","W-abs","W-bckMid","W-ankle","C1-chin","C2-chin","W1-head","C-butt",
"D-butt","H-bttck","S-BttKn","S-bttPpltl","C-calf","H-crvcl","W-chest","C-chest",
"D-chest","H-chest","H-crtch","C1-crtch","C2-crtch","W-ear","L-ear","D-ear",
"S-elbwBtt","S-eyeSght","W-foot","L2-foot","L1-LwArm","C-LwArm","L-elbwElbw",
"L2-lwArm","S-leg","W-hand","C-hand","L-hand","W2-head","C-head","L-head","C-heel",
"W-heel","W-hip","S-hipW","H-illio","L-btwEyes","W2-bckTop","W3-bckTop","H-knee",
"S-kneeH","H-knee2","H-heel","C-thighL","L-noseMntn","C1-neck","C2-neck",
"S-rchFngrUp","L-hndPalm","S-pplitlH","L3-lwArm","C-shldr","L2-upArm","L-shldr",
"S-H","L-sleeveFlx","L-sleeveDwn","L-armSpan","H-sttre","H-chest","H-upRib",
"C-thigh","S-thighD","L-armFllThmb","H-Knee3","L-noseTop","H-buttUp","C-trsoV",
"L-backV","W-waist","C-waist","D-waist","L-trsoV","H-waist","Wght","C-wrst","H-wrst")
#label <- rename(colnames(datos),"Meas-")
colnames(datos) <- label
###### Separate by gender
datosFem <- datos[which(gender=="Female"),]
datosMal <- datos[-which(gender=="Female"),]
###### Save RData
save(datos,file='./RData/all93measures.RData')
save(datosFem,file='./RData/all93measures-Fem.RData')
save(datosMal,file='./RData/all93measures-Mal.RData')
# Substitute long-technical-names with codenames
rename <- function(original.names,short.labels){
codeName <- paste(short.labels,1:length(original.names), sep="")}
#Build correlation matrix
myCorr <- function(scores){round(cor(scores, use="complete.obs"),3)}
#Inform mean correlation (ignoring the diagonal)
meanCorr <- function(corrMatrix){round(mean(corrMatrix[corrMatrix!=1]),3)}
#Run a PCA
myPCA <- function(scores){prcomp(na.omit(scores), center=TRUE, scale = TRUE)}
ratioVar <- function(pcaRes, noFactors=10){
sumPCA <- summary(pcaRes)
propVariance <- sumPCA$importance[2,1:noFactors]
ratios <- matrix(NA, ncol=2, nrow=noFactors-1)
for(i in 1:noFactors-1){
ratios[i,1] <- paste(i,"/",i+1, sep="")
ratios[i,2] <- round(propVariance[i]/propVariance[i+1],3)}
ratios <- as.data.frame(ratios)
colnames(ratios) <- c("Dimensions", "ratio_PropVar")
return(ratios)}
scree <- function(pcaRes,studyName="Scree Plot"){
fviz_eig(pcaRes, main=paste(studyName))+theme_classic(base_size = 11)}
biplot <- function(pcaRes,dim_x=1,dim_y=2){
fviz_pca_var(pcaRes, axes = c(dim_x, dim_y), repel = T)+
theme_classic(base_size = 11)}
#Scaling variables
myScale <- function(x){(x-mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)}
#Hierarchical clustering plots
plotHC <- function(scaledScores,studyNo=""){
plot(hclust(dist(t(scaledScores))),axes=F,ylab="",xlab="",
cex=0.3,
main=paste("Cluster dendogram - ",studyNo))}
corrplot(myCorr(datos), method="color", order="hclust", col.lim = c(-0.15,1),tl.cex = 0.4)
meanCorr(myCorr(datos))
scaleDatos <- apply(datos,2,myScale)
plotHC(scaleDatos, "Full sample")
PCA <- myPCA(datos)
sumPCA <- summary(PCA)
sumPCA
scree(PCA)
ratioVar(PCA)
biplot(PCA,1,2)
PCA
pcaRes = {CA}
fviz_pca_var(pcaRes, axes = c(dim_x, dim_y), repel = T)
fviz_pca_var(PCA)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(corrplot)
library(factoextra)
library(foreign)
options(ggrepel.max.overlaps = Inf)
###### Load data
link.SAV <- "../../datasets/moreyAntropo/data/ansur2.sav"
datos <- read.spss(link.SAV, to.data.frame = TRUE)
gender <- datos$Gender
###### Keep relevant columns
keep.columns <- c(2:94)
datos <- datos[,keep.columns]
###### Relabel the columns
label <- c("D-abs","H-shldr","L1-upArm","C-ankle","H-axlla","C-foot","L1-foot","W1-bckTop",
"C-upArm","W-abs","W-bckMid","W-ankle","C1-chin","C2-chin","W1-head","C-butt",
"D-butt","H-bttck","S-BttKn","S-bttPpltl","C-calf","H-crvcl","W-chest","C-chest",
"D-chest","H1-chest","H-crtch","C1-crtch","C2-crtch","W-ear","L-ear","D-ear",
"S-elbwBtt","S-eyeSght","W-foot","L2-foot","L1-LwArm","C-LwArm","L-elbwElbw",
"L2-lwArm","S-leg","W-hand","C-hand","L-hand","W2-head","C-head","L-head","C-heel",
"W-heel","W-hip","S-hipW","H-illio","L-btwEyes","W2-bckTop","W3-bckTop","H-knee",
"S-kneeH","H-knee2","H-heel","C-thighL","L-noseMntn","C1-neck","C2-neck",
"S-rchFngrUp","L-hndPalm","S-pplitlH","L3-lwArm","C-shldr","L2-upArm","L-shldr",
"S-H","L-sleeveFlx","L-sleeveDwn","L-armSpan","H-sttre","H2-chest","H-upRib",
"C-thigh","S-thighD","L-armFllThmb","H-Knee3","L-noseTop","H-buttUp","C-trsoV",
"L-backV","W-waist","C-waist","D-waist","L-trsoV","H-waist","Wght","C-wrst","H-wrst")
#label <- rename(colnames(datos),"Meas-")
colnames(datos) <- label
###### Separate by gender
datosFem <- datos[which(gender=="Female"),]
datosMal <- datos[-which(gender=="Female"),]
###### Save RData
save(datos,file='./RData/all93measures.RData')
save(datosFem,file='./RData/all93measures-Fem.RData')
save(datosMal,file='./RData/all93measures-Mal.RData')
# Substitute long-technical-names with codenames
rename <- function(original.names,short.labels){
codeName <- paste(short.labels,1:length(original.names), sep="")}
#Build correlation matrix
myCorr <- function(scores){round(cor(scores, use="complete.obs"),3)}
#Inform mean correlation (ignoring the diagonal)
meanCorr <- function(corrMatrix){round(mean(corrMatrix[corrMatrix!=1]),3)}
#Run a PCA
myPCA <- function(scores){prcomp(na.omit(scores), center=TRUE, scale = TRUE)}
ratioVar <- function(pcaRes, noFactors=10){
sumPCA <- summary(pcaRes)
propVariance <- sumPCA$importance[2,1:noFactors]
ratios <- matrix(NA, ncol=2, nrow=noFactors-1)
for(i in 1:noFactors-1){
ratios[i,1] <- paste(i,"/",i+1, sep="")
ratios[i,2] <- round(propVariance[i]/propVariance[i+1],3)}
ratios <- as.data.frame(ratios)
colnames(ratios) <- c("Dimensions", "ratio_PropVar")
return(ratios)}
scree <- function(pcaRes,studyName="Scree Plot"){
fviz_eig(pcaRes, main=paste(studyName))+theme_classic(base_size = 11)}
biplot <- function(pcaRes,dim_x=1,dim_y=2){
fviz_pca_var(pcaRes, axes = c(dim_x, dim_y), repel = T)+
theme_classic(base_size = 11)}
#Scaling variables
myScale <- function(x){(x-mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)}
#Hierarchical clustering plots
plotHC <- function(scaledScores,studyNo=""){
plot(hclust(dist(t(scaledScores))),axes=F,ylab="",xlab="",
cex=0.3,
main=paste("Cluster dendogram - ",studyNo))}
corrplot(myCorr(datos), method="color", order="hclust", col.lim = c(-0.15,1),tl.cex = 0.4)
meanCorr(myCorr(datos))
scaleDatos <- apply(datos,2,myScale)
plotHC(scaleDatos, "Full sample")
PCA <- myPCA(datos)
sumPCA <- summary(PCA)
sumPCA
scree(PCA)
ratioVar(PCA)
biplot(PCA,1,2)
fviz_pca_var(PCA)
?fviz_pca_var
biplot(PCA,2,3)
biplot(PCA,1,2)
?fva_pca_ind
?fviz_pca_ind
?fviz_pca_var
#biplot_Var(PCA,1,2)
fviz_pca_var(PCA, axes = c(1, 2), repel = T, geom=c("point","text"),
labelsize=2, pointsize=0.5, select.var = list(contrib = 20),
col.var="cos2",)+
scale_color_gradient2(low="goldenrod4", mid="red",high="blue", midpoint=0.6)+
theme_minimal()
#biplot_Var(PCA,1,2)
fviz_pca_var(PCA, axes = c(1, 2), repel = T, geom=c("point","text"),
labelsize=2, pointsize=0.5, select.var = list(contrib = 20),
col.var="contrib",)+
scale_color_gradient2(low="goldenrod4", mid="red",high="blue", midpoint=0.6)+
theme_minimal()
#biplot_Var(PCA,1,2)
fviz_pca_var(PCA, axes = c(1, 2), repel = T, geom=c("point","text"),
labelsize=2, pointsize=0.5, select.var = list(contrib = 20),
col.var="cos2",)+
scale_color_gradient2(low="goldenrod4", mid="red",high="blue", midpoint=0.6)+
theme_minimal()
#biplot_Var(PCA,1,2)
fviz_pca_var(PCA, axes = c(1, 2), repel = T, geom=c("point","text"),
labelsize=2, pointsize=0.5, select.var = list(cos2 = 30),
col.var="cos2",)+
scale_color_gradient2(low="goldenrod4", mid="red",high="blue", midpoint=0.6)+
theme_minimal()
#biplot_Var(PCA,1,2)
fviz_pca_var(PCA, axes = c(1, 2), repel = T, geom=c("point","text"),
labelsize=2, pointsize=0.5, select.var = list(cos2 = 30),
col.var="contrib",)+
scale_color_gradient2(low="goldenrod4", mid="red",high="blue", midpoint=0.6)+
theme_minimal()
# Load the data
link <- "https://raw.githubusercontent.com/rouderj/temp/main/datForModel.dat"
data <- read.table(file=link,header = TRUE)
# We prepare the data:
meanData <- tapply(data$y, list(data$sub,data$task),mean)
colnames(meanData) <- c("pro","anti")
diff <- meanData[,2] - meanData[,1]
#How to make a plot?
# First example, with xlab and ylab
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16,
xlab = "Prosaccade Duration",
ylab = "Antisaccade Duration",
main = "A.")
abline(0,1)
#Second example with ann=F and mtext()
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16, ann= F)
mtext("Prosaccade Duration",side=1,line=3)
mtext("Antisaccade Duration",side=2,line=3)
mtext("A.",side=1,line=3)
abline(0,1)
#Start computing and adding info
#Correlations
R_ProAnti <-cor(meanData[,1],meanData[,2])
R_DiffPro <- cor(diff,meanData[,1])
R_DiffAnti <- cor(diff,meanData[,2])
#Fitted Lines
LM_ProAnti <- lm(meanData[,2]~meanData[,1])
#Make first plot on Figure
# First example, with xlab and ylab
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16,
xlab = "Prosaccade Duration",
ylab = "Antisaccade Duration",
main = "A.")
abline(0,1)
text(133,75,paste("R =",round(R_ProAnti,2)))
abline(LM_ProAnti, lwd=1, lty=5)
##### GOAL: Finish the remaining two plots!
link <- "https://raw.githubusercontent.com/rouderj/temp/main/datForModel.dat"
link
link <- "https://raw.githubusercontent.com/rouderj/temp/main/datForModel.dat"
data <- read.table(file=link)
data
link <- "https://raw.githubusercontent.com/rouderj/temp/main/datForModel.dat"
data <- read.table(file=link,header = TRUE)
data
data$y
meanData <- tapply(data$y, list(data$sub,data$task),mean)
meanData
colnames(meanData) <- c("pro","anti")
meanData
meanData[3,1]
diff <- meanData[,2] - meanData[,1]
diff
plot(meanData[,1])
meanData[,1]
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16,
xlab = "Prosaccade Duration",
ylab = "Antisaccade Duration",
main = "A.")
abline(0,1)
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=15,
xlab = "Prosaccade Duration",
ylab = "Antisaccade Duration",
main = "A.")
abline(0,1)
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16, ann= F)
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16, ann= F)
mtext("Prosaccade Duration",side=1,line=3)
mtext("Antisaccade Duration",side=2,line=3)
mtext("A.",side=1,line=3)
abline(0,1)
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16,
xlab = "Prosaccade Duration",
ylab = "Antisaccade Duration",
main = "A.")
abline(0,1)
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16,
xlab = "Prosaccade Duration",
ylab = "Antisaccade Duration",
main = "A.")
abline(0,1)
text(133,75,paste("R =",round(R_ProAnti,2)))
R_ProAnti <-cor(meanData[,1],meanData[,2])
R_DiffPro <- cor(diff,meanData[,1])
R_DiffAnti <- cor(diff,meanData[,2])
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16,
xlab = "Prosaccade Duration",
ylab = "Antisaccade Duration",
main = "A.")
abline(0,1)
text(133,75,paste("R =",round(R_ProAnti,2)))
LM_ProAnti
# Model: Y ~ X
LM_ProAnti <- lm(meanData[,2]~meanData[,1])
LM_ProAnti
plot(x=meanData[,1],y=meanData[,2],
xlim=c(0,200),ylim=c(0,200),
col="darkseagreen3", pch=16,
xlab = "Prosaccade Duration",
ylab = "Antisaccade Duration",
main = "A.")
abline(0,1)
text(133,75,paste("R =",round(R_ProAnti,2)))
abline(LM_ProAnti, lwd=1, lty=5)
cor(meanData[,1],meanData[,2])
cor(c(meanData[,1],meanData[,2]))
